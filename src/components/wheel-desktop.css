/* Main container for the wheel component */
.wheel-desktop-container {
  width: 100%;
  margin: 0 auto;
  position: relative;
  padding: 3rem 0 2rem 0;
  overflow: visible;
  border: none;
  box-shadow: none;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  text-align: center; /* Ensure text is centered */
  max-width: 100%; /* Ensure it doesn't overflow parent */
}

/* Viewport-based wheel container */
.wheel-viewport-container {
  width: min(85%, 800px);
  position: relative;
  padding-bottom: min(85%, 800px); /* Creates a square aspect ratio but slightly smaller */
  border: none;
  box-shadow: none;
  overflow: visible;
  margin: 2rem auto;
  left: 0;
  right: 0;
  max-width: 800px; /* Ensure consistent max width */
}

/* Wheel container that holds the actual wheel component */
.wheel-container {
  position: absolute;
  top: 0;
  left: 50%;
  right: auto;
  bottom: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: visible;
  margin: 0 auto;
  transform: translateX(-50%); /* Center horizontally */
}

/* Container for input and button with increased spacing from wheel */
.wheel-input-button-container {
  margin-top: 6rem; /* Bigger gap between wheel and input/button container */
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Make the wheel component fill its container */
.wheel-container > div {
  width: 100% !important;
  height: 100% !important;
  transform-origin: center center;
  transform: scale(2);
  margin: 0 auto;
  left: 0;
  right: 0;
  position: relative; /* Ensure positioning context */
}

/* Style the pointer */
.wheel-container > div > svg > polygon {
  fill: #00263a !important;
}

/* Responsive scaling based on viewport width */
@media (min-width: 768px) {
  .wheel-viewport-container {
    width: min(80vw, 800px);
    max-width: min(80vw, 800px);
    margin: 0 auto;
    padding-bottom: min(80vw, 800px);
  }
  
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(1.8);
    margin: 0 auto;
  }
}

@media (min-width: 1080px) {
  .wheel-viewport-container {
    width: min(70vw, 800px);
    max-width: min(70vw, 800px);
    padding-bottom: min(70vw, 800px);
    margin: 0 auto;
  }
  
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(2);
    margin: 0 auto;
  }
}

@media (min-width: 1440px) {
  .wheel-viewport-container {
    width: min(60vw, 800px);
    max-width: min(60vw, 800px);
    padding-bottom: min(60vw, 800px);
    margin: 0 auto;
  }
  
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(2.2);
    margin: 0 auto;
  }
}

@media (min-width: 1920px) {
  .wheel-viewport-container {
    width: 50vw;
    max-width: 50vw;
    padding-bottom: 50vw;
    margin: 0 auto;
  }
  
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(3);
    margin: 0 auto;
  }
}

@media (min-width: 2560px) {
  .wheel-viewport-container {
    width: 50vw;
    max-width: 50vw;
    padding-bottom: 50vw;
    margin: 0 auto;
  }
  
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(4);
    margin: 0 auto;
  }
}

/* Mobile-specific adjustments */
@media (max-width: 767px) {
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(1.8);
    margin: 0 auto;
  }
}

@media (max-width: 480px) {
  .wheel-container {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .wheel-container > div {
    transform: scale(1.5);
    margin: 0 auto;
  }
}

/* Custom pointer styling - target the SVG directly */
.wheel-container svg polygon {
  fill: #052740 !important;
  stroke: #052740 !important;
  stroke-width: 4px !important;
  transform: scale(2) !important;
}
